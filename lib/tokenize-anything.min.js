/**
* tokenize-anything - a module for tokenizing source code
* version 0.1.0
* 
* The MIT License (MIT)
* 
* Copyright (c) 2014 jesse-sheehan
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
* 
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
* 
* @license
*/
var isnull=function(e){return e===null||typeof e=="undefined"};var _default=function(e,n){return isnull(e)?n:e};module.exports=function(e,n,o){var t=0,s=[];n=_default(n,[]);o=_default(o,[]);n.map(function(e){e.pattern=_default(e.pattern,[]);e.patterns=_default(e.patterns,[]);e.patterns=[].concat(e.pattern).concat(e.patterns).map(function(e,n,o){if(e.source[0]!="^")return new RegExp("^"+e.source);return e})});while(t<e.length){var i=e.substr(t);n.some(function(e){return e.patterns.some(function(n){var o=n.exec(i);if(!isnull(o)){t+=o[0].length-1;s.push({name:e.name,index:t,value:o[0]});return true}return false})});t++}if(o.length>0){o.map(function(e){e.action=_default(e.action,"");e.options=_default(e.options,{});switch(e.action){case"remove":e.options.name=_default(e.options.name,[]);e.options.names=_default(e.options.names,[]);e.options.names=[].concat(e.options.name).concat(e.options.names);s=s.filter(function(n){return e.options.names.indexOf(n.name)==-1});break;case"compose":var t=0,i=[];var a=false,u,l,p;var r=0;if(isnull(e.options.open)||isnull(e.options.close)||isnull(e.options.name))break;e.options.preserve=_default(e.options.preserve,false);e.options.balance=_default(e.options.balance,false);e.options.include=_default(e.options.include,false);e.options.recurse=_default(e.options.recurse,false);e.options.definitions=_default(e.options.definitions,n);e.options.actions=_default(e.options.actions,o);while(t<s.length){if(a){if(s[t].name==e.options.close){r--;if(e.options.balance&&r===0||!e.options.balance){a=false;if(e.options.include)l+=s[t].value;var f=[];if(e.options.recurse===true){f=module.exports(l,e.options.definitions,e.options.actions)}i.push({name:e.options.name,index:u,value:l,children:f});if(e.options.preserve)i.push(s[t])}else{l+=s[t].value}}else{if(s[t].name==e.options.open){r++}l+=s[t].value}}else{if(s[t].name==e.options.open){r++;if(e.options.preserve)i.push(s[t]);a=true;u=t+1;l=e.options.include?s[t].value:""}else{i.push(s[t])}}t+=1}s=i;break}})}return s};